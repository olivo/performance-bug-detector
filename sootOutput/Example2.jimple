class Example2 extends java.lang.Object
{

    void <init>()
    {
        Example2 r0;

        r0 := @this: Example2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int computeMin(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        java.util.Iterator r1;
        java.lang.Integer r2, $r4;
        java.lang.Object $r3, $r5;
        boolean $z0;
        int $i0, i1;

        r0 := @parameter0: java.util.ArrayList;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (java.lang.Integer) $r3;

        i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r1 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i0);

        goto label1;

     label2:
        return i1;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.util.Iterator r2, r8;
        java.lang.Integer r3, $r6, r9, $r11;
        java.util.ArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5, $r10, $r12;
        int $i2, i3, i4, i5;

        r0 := @parameter0: java.lang.String[];

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label1:
        if i3 >= 10 goto label2;

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label1;

     label2:
        i4 = 2147483647;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r5;

        $r10 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r11 = (java.lang.Integer) $r10;

        i5 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        r8 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.Integer) $r12;

        $i2 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i5, $i2);

        goto label4;

     label5:
        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i5);

        goto label3;

     label6:
        return;
    }
}
