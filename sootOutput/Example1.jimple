class Example1 extends java.lang.Object
{

    void <init>()
    {
        Example1 r0;

        r0 := @this: Example1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.util.Iterator r2, r4;
        java.lang.Integer r3, r5, $r9;
        java.util.ArrayList $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8;
        int $i1, i2, i3;

        r0 := @parameter0: java.lang.String[];

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= 10 goto label2;

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(i2);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 2147483647;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r7;

        r4 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.Integer) $r8;

        $i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        if $i1 >= i3 goto label5;

        i3 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

     label5:
        goto label4;

     label6:
        goto label3;

     label7:
        return;
    }
}
